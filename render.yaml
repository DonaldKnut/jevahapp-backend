services:
  # Main Backend API Service
  - type: web
    name: jevah-backend
    env: node
    plan: starter
    region: oregon
    branch: main
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4000
      - key: MONGODB_URI
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: JWT_REFRESH_SECRET
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_PUBLISHABLE_KEY
        sync: false
      - key: GOOGLE_AI_API_KEY
        sync: false
      - key: CLOUDINARY_CLOUD_NAME
        sync: false
      - key: CLOUDINARY_API_KEY
        sync: false
      - key: CLOUDINARY_API_SECRET
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-east-1
      - key: AWS_S3_BUCKET
        sync: false
      - key: MUX_TOKEN_ID
        sync: false
      - key: MUX_TOKEN_SECRET
        sync: false
      - key: CONTABO_API_URL
        sync: false
      - key: CONTABO_API_TOKEN
        sync: false
      - key: CONTABO_CUSTOMER_ID
        sync: false
      - key: RESEND_API_KEY
        sync: false
      - key: FRONTEND_URL
        value: https://jevah-app.vercel.app
      - key: API_BASE_URL
        value: https://jevah-backend.onrender.com
      - key: CORS_ORIGIN
        value: https://jevah-app.vercel.app
      - key: LOG_LEVEL
        value: info
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100
      - key: UPLOAD_MAX_FILE_SIZE
        value: 10485760
      - key: SESSION_SECRET
        sync: false
      - key: REDIS_URL
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: PAYPAL_CLIENT_ID
        sync: false
      - key: PAYPAL_CLIENT_SECRET
        sync: false
      - key: SENTRY_DSN
        sync: false
      - key: NEW_RELIC_LICENSE_KEY
        sync: false
      - key: NEW_RELIC_APP_NAME
        value: jevah-backend
    autoDeploy: true
    numInstances: 1
    disk:
      name: data
      mountPath: /opt/render/project/src/uploads
      sizeGB: 10

  # Redis Service for Caching and Sessions
  - type: redis
    name: jevah-redis
    plan: starter
    region: oregon
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

  # MongoDB Database Service
  - type: pserv
    name: jevah-mongodb
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile.mongodb
    envVars:
      - key: MONGO_INITDB_ROOT_USERNAME
        sync: false
      - key: MONGO_INITDB_ROOT_PASSWORD
        sync: false
      - key: MONGO_INITDB_DATABASE
        value: jevah
    disk:
      name: mongodb-data
      mountPath: /data/db
      sizeGB: 10

databases:
  # MongoDB Atlas (Alternative to self-hosted MongoDB)
  - name: jevah-mongodb-atlas
    databaseName: jevah
    user: jevah-user
    plan: starter
    region: oregon

# Environment Groups for different environments
envGroups:
  - name: jevah-production
    envVars:
      - key: NODE_ENV
        value: production
      - key: LOG_LEVEL
        value: warn
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 200
      - key: UPLOAD_MAX_FILE_SIZE
        value: 52428800

  - name: jevah-staging
    envVars:
      - key: NODE_ENV
        value: staging
      - key: LOG_LEVEL
        value: info
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 150
      - key: UPLOAD_MAX_FILE_SIZE
        value: 20971520

# Cron Jobs for maintenance tasks
crons:
  - name: cleanup-temp-files
    env: node
    schedule: "0 2 * * *"
    buildCommand: npm install
    startCommand: node scripts/cleanup-temp-files.js
    envVars:
      - key: NODE_ENV
        value: production

  - name: backup-database
    env: node
    schedule: "0 3 * * 0"
    buildCommand: npm install
    startCommand: node scripts/backup-database.js
    envVars:
      - key: NODE_ENV
        value: production

# Static Site for API Documentation
staticSites:
  - name: jevah-api-docs
    env: static
    buildCommand: echo "API documentation served from main service"
    staticPublishPath: ./public
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: API_BASE_URL
        value: https://jevah-backend.onrender.com

# Secrets Management
secrets:
  - key: JWT_SECRET
    description: "JWT signing secret for authentication"
  - key: JWT_REFRESH_SECRET
    description: "JWT refresh token secret"
  - key: MONGODB_URI
    description: "MongoDB connection string"
  - key: CLERK_SECRET_KEY
    description: "Clerk authentication secret key"
  - key: GOOGLE_AI_API_KEY
    description: "Google AI API key for chatbot"
  - key: CLOUDINARY_API_SECRET
    description: "Cloudinary API secret for media uploads"
  - key: AWS_SECRET_ACCESS_KEY
    description: "AWS S3 secret access key"
  - key: MUX_TOKEN_SECRET
    description: "Mux streaming service token secret"
  - key: CONTABO_API_TOKEN
    description: "Contabo streaming service API token"
  - key: RESEND_API_KEY
    description: "Resend email service API key"
  - key: STRIPE_SECRET_KEY
    description: "Stripe payment processing secret key"
  - key: PAYPAL_CLIENT_SECRET
    description: "PayPal payment processing client secret"
  - key: SENTRY_DSN
    description: "Sentry error tracking DSN"
  - key: NEW_RELIC_LICENSE_KEY
    description: "New Relic monitoring license key"

# Health Checks
healthChecks:
  - name: api-health
    path: /health
    intervalSeconds: 30
    timeoutSeconds: 10
    gracePeriodSeconds: 60
    maxConsecutiveFailures: 3

  - name: database-health
    path: /api/health/database
    intervalSeconds: 60
    timeoutSeconds: 15
    gracePeriodSeconds: 120
    maxConsecutiveFailures: 5

# Scaling Configuration
scaling:
  minInstances: 1
  maxInstances: 5
  targetCPUUtilizationPercent: 70
  targetMemoryUtilizationPercent: 80

# Networking
networking:
  - name: jevah-network
    type: private
    services:
      - jevah-backend
      - jevah-redis
      - jevah-mongodb

# Monitoring and Logging
monitoring:
  - name: jevah-monitoring
    type: custom
    command: node scripts/monitoring.js
    envVars:
      - key: MONITORING_ENABLED
        value: true
      - key: ALERT_WEBHOOK_URL
        sync: false
